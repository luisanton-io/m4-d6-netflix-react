{"ast":null,"code":"var _jsxFileName = \"/Users/lou/Documents/Strive/m4-d6-netflix-react/src/components/Movie.jsx\";\nimport React, { Component } from \"react\";\nimport { Col, Modal, Form, InputGroup, FormControl, Button } from \"react-bootstrap\";\nimport CommentList from \"./CommentList\";\n\nclass Movie extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      movieID: \"\",\n      selected: false,\n      comments: [],\n      newComment: {\n        comment: \"\",\n        rate: 0,\n        elementId: this.props.data.imdbID\n      }\n    };\n\n    this.componentDidUpdate = () => {\n      let imdbID = this.props.imdbID;\n\n      if (imdbID !== this.state.imdbID) {\n        this.setState({\n          imdbID\n        }, () => {\n          fetchComments();\n        });\n      }\n    };\n\n    this.fetchComments = async movieID => {\n      const commentsUrl = \"https://striveschool.herokuapp.com/api/comments/\";\n      const comments = await fetch(commentsUrl + movieID, {\n        headers: {\n          \"Authorization\": \"Basic \" + btoa(\"user17:6DJn4e5qbqb2a4D8\")\n        }\n      }).then(response => response.json());\n      this.setState({\n        comments\n      });\n    };\n\n    this.submitComment = async e => {\n      e.preventDefault();\n      const commentsUrl = \"https://striveschool.herokuapp.com/api/comments/\";\n      const response = await fetch(commentsUrl, {\n        method: \"POST\",\n        body: JSON.stringify(this.state.newComment),\n        headers: {\n          \"Authorization\": \"Basic \" + btoa(\"user17:6DJn4e5qbqb2a4D8\"),\n          \"Content-Type\": \"application/json\"\n        }\n      });\n\n      if (response.ok) {\n        alert(\"Comment added\");\n        this.setState({\n          newComment: {\n            comment: \"\",\n            rate: 0,\n            elementId: this.props.data.imdbID\n          }\n        });\n      } else {\n        alert(\"An error has occurred\");\n      }\n    };\n\n    this.handleRadioChange = e => {\n      let newComment = this.state.newComment;\n      newComment.rate = e.currentTarget.id;\n      this.setState({\n        newComment\n      });\n    };\n\n    this.handleCommentText = e => {\n      let newComment = this.state.newComment;\n      newComment.comment = e.currentTarget.value;\n      this.setState({\n        newComment\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Col, {\n      className: \"mb-2\",\n      key: this.props.data.imdbID,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"img-fluid\",\n      src: this.props.data.Poster,\n      alt: \"movie\",\n      onClick: () => {\n        this.setState({\n          selected: !this.state.selected\n        });\n        this.props.fetchComments(this.props.data.imdbID);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Modal, {\n      show: this.state.selected,\n      onHide: () => this.setState({\n        selected: !this.state.selected\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Header, {\n      closeButton: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }\n    }, \"Movie comments\")), /*#__PURE__*/React.createElement(Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"my-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }\n    }, this.props.comments.length > 0 && this.props.comments[0].elementId === this.props.data.imdbID && /*#__PURE__*/React.createElement(CommentList, {\n      comments: this.props.comments,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"my-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }\n    }, \"Add a comment\"), /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.submitComment,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"my-3 text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 19\n      }\n    }, [1, 2, 3, 4, 5].map(value => {\n      return /*#__PURE__*/React.createElement(Form.Check, {\n        inline: true,\n        label: value,\n        type: \"radio\",\n        id: value,\n        name: \"rating\",\n        onClick: this.handleRadioChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 32\n        }\n      });\n    })), /*#__PURE__*/React.createElement(InputGroup, {\n      className: \"mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      placeholder: \"Write your comment\",\n      \"aria-label\": \"comment\",\n      \"aria-describedby\": \"basic-addon1\",\n      onChange: this.handleCommentText,\n      value: this.state.newComment.comment,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 19\n      }\n    }, \"Submit\")))))));\n  }\n\n}\n\nexport default Movie;","map":{"version":3,"sources":["/Users/lou/Documents/Strive/m4-d6-netflix-react/src/components/Movie.jsx"],"names":["React","Component","Col","Modal","Form","InputGroup","FormControl","Button","CommentList","Movie","state","movieID","selected","comments","newComment","comment","rate","elementId","props","data","imdbID","componentDidUpdate","setState","fetchComments","commentsUrl","fetch","headers","btoa","then","response","json","submitComment","e","preventDefault","method","body","JSON","stringify","ok","alert","handleRadioChange","currentTarget","id","handleCommentText","value","render","Poster","length","map"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Col,\n  Modal,\n  Form,\n  InputGroup,\n  FormControl,\n  Button,\n} from \"react-bootstrap\";\nimport CommentList from \"./CommentList\";\n\nclass Movie extends Component {\n  state = {\n    movieID: \"\",\n    selected: false,\n    comments:[],\n    newComment: {\n      comment: \"\",\n      rate: 0,\n      elementId: this.props.data.imdbID,\n    },\n  };\n\n  componentDidUpdate = () => {\n    let imdbID = this.props.imdbID\n    if (imdbID !== this.state.imdbID){\n      this.setState({ imdbID }, () => {\n        fetchComments()\n      })\n      \n    }\n  }\n\n  fetchComments = async (movieID) => {\n    const commentsUrl = \"https://striveschool.herokuapp.com/api/comments/\";\n    const comments = await fetch(commentsUrl + movieID, {\n      headers: {\n        \"Authorization\": \"Basic \" + btoa(\"user17:6DJn4e5qbqb2a4D8\")\n      },\n    }).then((response) => response.json());\n    this.setState({ comments });\n  };\n\n  submitComment = async (e) => {\n    e.preventDefault();\n    const commentsUrl = \"https://striveschool.herokuapp.com/api/comments/\";\n    const response = await fetch(commentsUrl, {\n      method: \"POST\",\n      body: JSON.stringify(this.state.newComment),\n      headers: {\n        \"Authorization\": \"Basic \" + btoa(\"user17:6DJn4e5qbqb2a4D8\"),\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    if (response.ok) {\n      alert(\"Comment added\");\n      this.setState({\n        newComment: {\n          comment: \"\",\n          rate: 0,\n          elementId: this.props.data.imdbID,\n        },\n      });\n    } else {\n      alert(\"An error has occurred\");\n    }\n  };\n\n  handleRadioChange = (e) => {\n    let newComment = this.state.newComment;\n    newComment.rate = e.currentTarget.id;\n    this.setState({ newComment });\n  };\n\n  handleCommentText = (e) => {\n    let newComment = this.state.newComment;\n    newComment.comment = e.currentTarget.value;\n    this.setState({ newComment });\n  };\n\n  render() {\n    return (\n      <Col className=\"mb-2\" key={this.props.data.imdbID}>\n        <img\n          className=\"img-fluid\"\n          src={this.props.data.Poster}\n          alt=\"movie\"\n          onClick={() => {\n            this.setState({ selected: !this.state.selected });\n            this.props.fetchComments(this.props.data.imdbID);\n          }}\n        />\n        <Modal\n          show={this.state.selected}\n          onHide={() => this.setState({ selected: !this.state.selected })}\n        >\n          <Modal.Header closeButton>\n            <Modal.Title>Movie comments</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <div className=\"my-3\">\n              {this.props.comments.length > 0 &&\n                this.props.comments[0].elementId === this.props.data.imdbID && (\n                  <CommentList comments={this.props.comments} />\n                )}\n              <div className=\"text-center\">\n                <h5 className=\"my-3\">Add a comment</h5>\n                <Form onSubmit={this.submitComment}>\n                  <div className=\"my-3 text-center\">\n                    {\n                      [1,2,3,4,5].map(value => {\n                        return <Form.Check\n                          inline\n                          label={value}\n                          type=\"radio\"\n                          id={value}\n                          name=\"rating\"\n                          onClick={this.handleRadioChange}\n                        />\n                      })\n                    }\n                  </div>\n                  <InputGroup className=\"mb-3\">\n                    <FormControl\n                      placeholder=\"Write your comment\"\n                      aria-label=\"comment\"\n                      aria-describedby=\"basic-addon1\"\n                      onChange={this.handleCommentText}\n                      value={this.state.newComment.comment}\n                    />\n                  </InputGroup>\n                  <Button variant=\"primary\" type=\"submit\">\n                    Submit\n                  </Button>\n                </Form>\n              </div>\n            </div>\n          </Modal.Body>\n        </Modal>\n      </Col>\n    );\n  }\n}\n\nexport default Movie;\n"]},"metadata":{},"sourceType":"module"}